{"version":3,"sources":["Axios.js","App.js","index.js"],"names":["AxiosInstance","axios","create","baseURL","App","useState","state","setState","totalConfirm","setTotalConfirmed","totalRecovered","setTotalRecovered","totalDeath","setTotalDeath","loading","setLoading","country","setCountry","React","useEffect","get","then","res","data","console","log","status","Global","TotalConfirmed","TotalRecovered","TotalDeaths","catch","err","Error","style","backgroundColor","padding","width","position","top","textAlign","color","marginLeft","marginRight","marginTop","id","display","justifyContent","Card","marginInline","marginBottom","height","border","CardHeader","title","CardContent","Typography","value","onChange","e","target","countrySlug","covidDetail","Countries","find","Slug","getCountryDetail","disabled","map","Country","onClick","document","getElementById","innerHTML","bottom","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.7e5b1470.chunk.js","sourcesContent":["import axios from \"axios\"\r\n\r\nconst AxiosInstance = axios.create({\r\n    baseURL : `https://api.covid19api.com`\r\n})\r\n\r\nexport default AxiosInstance;","import { Card, CardContent, CardHeader, Typography } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport axios from './Axios'\r\nimport \"./styles.css\"\r\n\r\nconst App = () => {\r\n\r\n    const [state , setState ] = useState([]);\r\n    const [totalConfirm , setTotalConfirmed ] = useState([]);\r\n    const [totalRecovered, setTotalRecovered ] = useState([]);\r\n    const [totalDeath , setTotalDeath ] = useState([]);\r\n    const [loading , setLoading ] = useState(false);\r\n    const [ country , setCountry] = useState('');\r\n  \r\n    React.useEffect(() => {\r\n        setLoading(true)\r\n        axios.get(`/summary`).then(res => {\r\n            setState(res.data);\r\n            console.log(res.data);\r\n            setLoading(false)\r\n\r\n\r\n            if(res.status === 200) {\r\n                setTotalConfirmed(res.data.Global.TotalConfirmed);\r\n                setTotalRecovered(res.data.Global.TotalRecovered);\r\n                setTotalDeath(res.data.Global.TotalDeaths);\r\n            }\r\n\r\n        }).catch(err => {\r\n            throw new Error(err)\r\n        })\r\n\r\n    },[])\r\n\r\nif(loading) {\r\n    return <h1>fetching data ...</h1>\r\n}\r\nconst getCountryDetail = (countrySlug) => {\r\n    axios.get(`/country/${countrySlug}/status/confirmed?from=2020-03-01T00:00:00Z&to=2020-04-01T00:00:00Z`)\r\n    const covidDetail = state.Countries.find(country => country.Slug === countrySlug);\r\n    setTotalConfirmed(covidDetail.TotalConfirmed)\r\n    setTotalRecovered(covidDetail.TotalRecovered);\r\n    setTotalDeath(covidDetail.TotalDeaths)\r\n}\r\n\r\nconst handleChange = (e) => {\r\n    setCountry(e.target.value);\r\n    getCountryDetail(e.target.value)\r\n}\r\n\r\nconst handleWorld = () => {\r\n    setTotalConfirmed(state.Global.TotalConfirmed);\r\n    setTotalRecovered(state.Global.TotalRecovered);\r\n    setTotalDeath(state.Global.TotalDeaths);\r\n    setCountry('')\r\n    {\r\n        document.getElementById(\"h\").innerHTML = \"World info...\"\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n         <div style={{backgroundColor:\"black\" , padding:\"1rem 0\",width:\"100%\",position:\"fixed\",top:\"0\"}}>\r\n            <navbar >\r\n                 <h3 style={{textAlign:\"center\",color:\"whitesmoke\"}}>Covid-19 Tracker</h3>\r\n             </navbar>  \r\n         </div>\r\n\r\n         <div style={{marginLeft:\"auto\",marginRight:\"auto\",backgroundColor:\"black\",width:\"max-content\"}}>\r\n          <h2 style={{textAlign:\"center\",marginTop:\"6rem\",padding:\"1rem\",color:\"lightblue\"}} id=\"h\">{country ? country : \"World info...\"}</h2>\r\n         </div>\r\n          <div id=\"card\" style={{display:\"flex\",justifyContent:\"center\",marginTop:\"4rem\"}}>\r\n            <Card style={{marginInline:\"1rem\",marginBottom:\"2rem\",height:\"160px\",width:\"200px\",backgroundColor:\"black\",color:\"orange\",textAlign:\"center\",border:\"4px solid orange\"}}>\r\n                <CardHeader title=\"Total Confirmed\" />\r\n                <CardContent>\r\n                    <Typography> {totalConfirm} </Typography>\r\n                </CardContent>\r\n            </Card>\r\n            <Card style={{marginBottom:\"2rem\",height:\"160px\",width:\"200px\",backgroundColor:\"black\",color:\"lightgreen\",textAlign:\"center\",border:\"4px solid green\"}}>\r\n                <CardHeader title=\"Total Recovered\" />\r\n                <CardContent>\r\n                    <Typography> {totalRecovered} </Typography>\r\n                </CardContent>\r\n            </Card>\r\n            <Card style={{marginInline:\"1rem\",height:\"160px\",width:\"200px\",backgroundColor:\"black\",color:\"red\",textAlign:\"center\",border:\"4px solid red\"}}>\r\n                <CardHeader title=\"Total Deaths\" />\r\n                <CardContent>\r\n                    <Typography style={{marginTop:\"1.97rem\"}}> {totalDeath} </Typography>\r\n                </CardContent>\r\n            </Card>\r\n          </div>\r\n          <div id=\"dselect\" style={{width:\"300px\",marginLeft:\"auto\",marginRight:\"auto\",display:\"flex\",justifyContent:\"center\",marginTop:\"5rem\"}}>\r\n            <select value={country} onChange={handleChange}>\r\n               <option value={\"\"} disabled={true}>Select Country...</option>\r\n               {\r\n                   state.Countries && state.Countries.map(country => {\r\n                       return <option key={country.Slug} value={country.Slug}>{ country.Country}</option>\r\n                   })\r\n               }\r\n            </select>\r\n          </div>\r\n          <div style={{display:\"flex\",justifyContent:\"center\"}}>\r\n            <button id=\"btn\" onClick={handleWorld}>Reset Data</button>   \r\n          </div>          \r\n          <div style={{height:\"100px\"}} />\r\n          <footer style={{position:\"fixed\",bottom:\"0\",backgroundColor:\"black\",width:\"100%\",padding:\"1rem 0\"}}>\r\n              <h3 style={{color:\"white\",textAlign:\"center\"}}>design : Mahdi Keshavarz</h3>\r\n          </footer>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default App;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\" \r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\"));"],"sourceRoot":""}